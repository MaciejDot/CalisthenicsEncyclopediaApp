// <auto-generated />
using System;
using ArticleService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArticleService.Data.Migrations
{
    [DbContext(typeof(ArticleServiceContext))]
    [Migration("20191225233321_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArticleService.Data.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(8000);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("ThumbnailId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id")
                        .HasName("PK_Article");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Created")
                        .IsUnique()
                        .HasName("IX_Article_Created");

                    b.HasIndex("ThumbnailId");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasName("IX_Article_Title")
                        .HasFilter("[Title] IS NOT NULL");

                    b.ToTable("Articles","Article");
                });

            modelBuilder.Entity("ArticleService.Data.Entities.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasMaxLength(256000);

                    b.HasKey("Id")
                        .HasName("PK_Thumbnail");

                    b.ToTable("Thumbnails","Article");
                });

            modelBuilder.Entity("ArticleService.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Users");

                    b.ToTable("Users","Security");
                });

            modelBuilder.Entity("ArticleService.Data.Entities.Article", b =>
                {
                    b.HasOne("ArticleService.Data.Entities.User", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK_Articles_Users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArticleService.Data.Entities.Thumbnail", "Thumbnail")
                        .WithMany("Article")
                        .HasForeignKey("ThumbnailId")
                        .HasConstraintName("FK_Articles_Thumbnails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
